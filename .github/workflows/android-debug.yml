name: build-debug

on:
  push:
    branches: [ main ]
    paths:
      - "**.py"
      - "buildozer.spec"
      - ".github/workflows/android-debug.yml"
      - "requirements.txt"
      - "pyproject.toml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  android-debug:
    runs-on: ubuntu-24.04
    env:
      ANDROID_HOME: ${{ github.runner.temp }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.runner.temp }}/android-sdk
      GRADLE_OPTS: -Xmx4g -Dorg.gradle.daemon=false
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_PYTHON_VERSION_WARNING: "1"
      BUILDOZER_WARN_ON_ROOT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git zip unzip \
            python3-venv python3-pip \
            libffi-dev libssl-dev libbz2-dev libsqlite3-dev zlib1g-dev \
            libncurses5-dev libncursesw5-dev libreadline-dev libgdbm-dev liblzma-dev \
            autoconf automake libtool pkg-config cmake

      - name: Restore caches
        uses: actions/cache@v4
        with:
          path: |
            .buildozer
            ~/.buildozer
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: Linux-buildozer-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('requirements.txt', 'pyproject.toml') }}
          restore-keys: |
            Linux-buildozer-

      - name: Create venv & install tools
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install "cython>=3.0" buildozer

      - name: Set up Android SDK (cmdline-tools)
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platform-tools

      - name: Accept licenses & pin API/Build-Tools
        shell: bash
        run: |
          mkdir -p "$ANDROID_SDK_ROOT"
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-34" "build-tools;34.0.0"
          # Eventuelle 36.x Reste aggressiv entfernen (verhindert AIDL-Fehler)
          rm -rf "$HOME/.buildozer/android/platform/android-sdk/build-tools/36."* || true
          rm -rf "$ANDROID_SDK_ROOT/build-tools/36."* || true

      - name: Build debug APK
        shell: bash
        run: |
          source .venv/bin/activate
          echo "== sdkmanager --list (short) =="
          sdkmanager --list | sed -n '1,120p' || true

          set -o pipefail
          # ausführliches Buildozer-Log, wir behalten es als Artefakt
          buildozer -v android debug 2>&1 | tee buildozer.log

      - name: Show produced files (diagnostics)
        if: always()
        run: |
          echo "== tree bin (if exists) =="
          (ls -la bin && find bin -maxdepth 2 -type f) || echo "no bin dir"
          echo "== search for APK/AAB under .buildozer =="
          find .buildozer -type f \( -name "*.apk" -o -name "*.aab" \) -printf "%p\n" || true

      # Artefakte IMMER hochladen: Logs + alle möglichen Output-Pfade
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            buildozer.log
            .buildozer/android/platform/*.txt
            .buildozer/android/platform/*/gradle-*.log
          if-no-files-found: warn

      - name: Upload APK/AAB (best-effort, mehrere Pfade)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spectro-android-outputs
          path: |
            bin/**/*.apk
            bin/**/*.aab
            .buildozer/**/outputs/**/*.apk
            .buildozer/**/outputs/**/*.aab
            .buildozer/android/platform/build-*/dists/*/bin/*.apk
          if-no-files-found: warn
